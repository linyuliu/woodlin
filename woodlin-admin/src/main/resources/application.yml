# Woodlin 管理后台系统配置
# 作者: mumu
# 描述: 应用程序的核心配置文件，包含服务器、数据库、缓存等配置

# 服务器配置
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: ${SERVER_CONTEXT_PATH:/api}
    encoding:
      charset: UTF-8
      enabled: true
      force: true

# Spring Boot 配置
spring:
  application:
    name: ${SPRING_APPLICATION_NAME:woodlin-admin}
  
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  # Spring Boot Banner 配置
  main:
    banner-mode: off
  
  # 数据库配置
  datasource:
    dynamic:
      primary: master
      strict: false
      datasource:
        master:
          url: ${DATABASE_URL:jdbc:mysql://localhost:3306/woodlin?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8}
          username: ${DATABASE_USERNAME:root}
          password: ${DATABASE_PASSWORD:Passw0rd}
          driver-class-name: ${DATABASE_DRIVER:com.mysql.cj.jdbc.Driver}
          type: com.alibaba.druid.pool.DruidDataSource
          druid:
            initial-size: ${DATABASE_DRUID_INITIAL_SIZE:5}
            min-idle: ${DATABASE_DRUID_MIN_IDLE:5}
            max-active: ${DATABASE_DRUID_MAX_ACTIVE:20}
            max-wait: ${DATABASE_DRUID_MAX_WAIT:60000}
            time-between-eviction-runs-millis: 60000
            min-evictable-idle-time-millis: 300000
            validation-query: ${DATABASE_DRUID_VALIDATION_QUERY:SELECT 1}
            test-while-idle: true
            test-on-borrow: false
            test-on-return: false
            pool-prepared-statements: true
            max-pool-prepared-statement-per-connection-size: 20
            filters: stat,wall,slf4j
            connection-properties: druid.stat.mergeSql\=true;druid.stat.slowSqlMillis\=5000
            web-stat-filter:
              enabled: true
              url-pattern: "/*"
              exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
            stat-view-servlet:
              enabled: true
              url-pattern: "/druid/*"
              reset-enable: false
              login-username: ${DATABASE_DRUID_USERNAME:admin}
              login-password: ${DATABASE_DRUID_PASSWORD:Passw0rd}
              allow: ${DATABASE_DRUID_ALLOW:}
  
  # Redis配置
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      database: ${REDIS_DATABASE:0}
      password: ${REDIS_PASSWORD:}
      timeout: ${REDIS_TIMEOUT:10s}
      lettuce:
        pool:
          max-active: ${REDIS_POOL_MAX_ACTIVE:200}
          max-wait: ${REDIS_POOL_MAX_WAIT:-1ms}
          max-idle: ${REDIS_POOL_MAX_IDLE:10}
          min-idle: ${REDIS_POOL_MIN_IDLE:0}
  
  # Jackson配置
  jackson:
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      write-dates-as-timestamps: false
      fail-on-empty-beans: false
    deserialization:
      fail-on-unknown-properties: false
    default-property-inclusion: NON_NULL
    # Long类型序列化为String，避免JavaScript精度丢失
    generator:
      write-numbers-as-strings: false

# MyBatis Plus配置
mybatis-plus:
  # mapper文件位置
  mapper-locations: classpath*:mapper/**/*.xml
  # 实体类别名包路径
  type-aliases-package: com.mumu.woodlin.*.entity
  # 全局配置
  global-config:
    # 数据库字段映射配置
    db-config:
      # 主键类型
      id-type: ASSIGN_ID
      # 逻辑删除字段
      logic-delete-field: deleted
      # 逻辑删除值
      logic-delete-value: 1
      # 逻辑未删除值
      logic-not-delete-value: 0
    # 是否控制台打印MyBatis Plus启动banner
    banner: false
  # 配置
  configuration:
    # 是否开启自动驼峰命名规则映射
    map-underscore-to-camel-case: true
    # 缓存配置
    cache-enabled: false
    # 调用setters时是否调用
    call-setters-on-nulls: true
    # JDBC类型为空时的处理方式
    jdbc-type-for-null: null
    # 日志实现
    log-impl: org.apache.ibatis.logging.slf4j.Slf4jImpl

# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: ${SA_TOKEN_NAME:Authorization}
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: ${SA_TOKEN_TIMEOUT:2592000}
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: ${SA_TOKEN_ACTIVITY_TIMEOUT:-1}
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: ${SA_TOKEN_IS_CONCURRENT:true}
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: ${SA_TOKEN_IS_SHARE:false}
  # token风格
  token-style: ${SA_TOKEN_STYLE:uuid}
  # 是否输出操作日志
  is-log: ${SA_TOKEN_IS_LOG:false}

# SpringDoc配置
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  info:
    title: Woodlin 管理后台系统 API
    description: 高质量多租户中后台管理系统框架 - 注重设计与代码细节
    version: '@project.version@'
    contact:
      name: mumu
      email: mumu@woodlin.com
    license:
      name: MIT License
      url: https://opensource.org/licenses/MIT

# 日志配置
logging:
  level:
    com.mumu.woodlin: debug
    org.springframework.security: debug
    org.mybatis: debug
  pattern:
    console: '%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}'

# 管理端点配置
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

# SnailJob 分布式任务调度配置
snail-job:
  # 是否启用SnailJob
  enabled: ${SNAIL_JOB_ENABLED:true}
  # 服务端地址
  server-address: ${SNAIL_JOB_SERVER_ADDRESS:localhost:8888}
  # 命名空间
  namespace: ${SNAIL_JOB_NAMESPACE:woodlin}
  # 组名称
  group-name: ${SNAIL_JOB_GROUP_NAME:woodlin-admin}
  # 客户端配置
  client:
    # 重试配置
    retry:
      # 重试次数
      max-retry-count: ${SNAIL_JOB_MAX_RETRY_COUNT:3}
      # 重试间隔(秒)
      retry-interval: ${SNAIL_JOB_RETRY_INTERVAL:30}

# Redisson 配置
redisson:
  # 单节点配置
  single-server-config:
    address: ${REDISSON_ADDRESS:redis://localhost:6379}
    database: ${REDISSON_DATABASE:0}
    password: ${REDISSON_PASSWORD:}
    connection-pool-size: ${REDISSON_CONNECTION_POOL_SIZE:64}
    connection-minimum-idle-size: ${REDISSON_CONNECTION_MIN_IDLE_SIZE:10}
    idle-connection-timeout: ${REDISSON_IDLE_CONNECTION_TIMEOUT:10000}
    connect-timeout: ${REDISSON_CONNECT_TIMEOUT:10000}
    timeout: ${REDISSON_TIMEOUT:3000}
    retry-attempts: ${REDISSON_RETRY_ATTEMPTS:3}
    retry-interval: ${REDISSON_RETRY_INTERVAL:1500}

# 分页配置
page:
  # 默认页码
  default-page-num: 1
  # 默认页面大小
  default-page-size: 20
  # 最大页面大小 (防止大量数据查询)
  max-page-size: 500
  # 最大页码 (防止页码溢出)
  max-page-num: 10000

# Woodlin 安全配置
woodlin:
  security:
    # 用户活动监控配置
    activity-monitoring:
      # 是否启用用户活动监控
      enabled: ${ACTIVITY_MONITORING_ENABLED:true}
      # 用户无活动超时时间（秒），超时后自动登出，-1表示不限制
      timeout-seconds: ${ACTIVITY_MONITORING_TIMEOUT:1800}
      # 监控检查间隔（秒）
      check-interval-seconds: ${ACTIVITY_MONITORING_CHECK_INTERVAL:60}
      # 是否监控API请求活动
      monitor-api-requests: ${ACTIVITY_MONITORING_API:true}
      # 是否监控前端用户交互（键盘、鼠标）
      monitor-user-interactions: ${ACTIVITY_MONITORING_INTERACTIONS:true}
      # 活动监控警告提前时间（秒）
      warning-before-timeout-seconds: ${ACTIVITY_MONITORING_WARNING:300}
    password:
      # 是否启用密码策略
      enabled: ${PASSWORD_POLICY_ENABLED:true}
      # 是否要求首次登录修改密码
      require-change-on-first-login: ${PASSWORD_REQUIRE_FIRST_CHANGE:false}
      # 密码过期天数（0表示永不过期）
      expire-days: ${PASSWORD_EXPIRE_DAYS:0}
      # 密码过期前提醒天数
      warning-days: ${PASSWORD_WARNING_DAYS:7}
      # 最大密码错误次数
      max-error-count: ${PASSWORD_MAX_ERROR_COUNT:5}
      # 账号锁定时长（分钟）
      lock-duration-minutes: ${PASSWORD_LOCK_DURATION_MINUTES:30}
      # 是否启用强密码策略
      strong-password-required: ${PASSWORD_STRONG_REQUIRED:false}
      # 最小密码长度
      min-length: ${PASSWORD_MIN_LENGTH:6}
      # 最大密码长度
      max-length: ${PASSWORD_MAX_LENGTH:20}
      # 是否要求包含数字
      require-digits: ${PASSWORD_REQUIRE_DIGITS:false}
      # 是否要求包含小写字母
      require-lowercase: ${PASSWORD_REQUIRE_LOWERCASE:false}
      # 是否要求包含大写字母
      require-uppercase: ${PASSWORD_REQUIRE_UPPERCASE:false}
      # 是否要求包含特殊字符
      require-special-chars: ${PASSWORD_REQUIRE_SPECIAL_CHARS:false}
  # API加密配置
  api:
    encryption:
      # 是否启用加密功能
      enabled: ${API_ENCRYPTION_ENABLED:false}
      # 加密算法类型：AES, RSA, SM4
      algorithm: ${API_ENCRYPTION_ALGORITHM:AES}
      # AES 加密密钥（Base64编码，建议使用128/192/256位密钥）
      aes-key: ${API_ENCRYPTION_AES_KEY:}
      # AES 初始化向量 IV（Base64编码）
      aes-iv: ${API_ENCRYPTION_AES_IV:}
      # AES 加密模式：CBC, ECB, CFB, OFB, CTR
      aes-mode: ${API_ENCRYPTION_AES_MODE:CBC}
      # AES 填充方式：PKCS5Padding, PKCS7Padding, NoPadding
      aes-padding: ${API_ENCRYPTION_AES_PADDING:PKCS5Padding}
      # RSA 公钥（Base64编码）
      rsa-public-key: ${API_ENCRYPTION_RSA_PUBLIC_KEY:}
      # RSA 私钥（Base64编码）
      rsa-private-key: ${API_ENCRYPTION_RSA_PRIVATE_KEY:}
      # RSA 密钥长度：1024, 2048, 4096
      rsa-key-size: ${API_ENCRYPTION_RSA_KEY_SIZE:2048}
      # SM4 加密密钥（Base64编码）
      sm4-key: ${API_ENCRYPTION_SM4_KEY:}
      # SM4 初始化向量 IV（Base64编码）
      sm4-iv: ${API_ENCRYPTION_SM4_IV:}
      # SM4 加密模式：CBC, ECB
      sm4-mode: ${API_ENCRYPTION_SM4_MODE:CBC}
      # 需要加密的接口路径模式列表（支持Ant风格通配符）
      include-patterns:
        # 示例配置（默认为空，表示不加密任何接口）
        # - /api/user/**        # 用户相关接口
        # - /api/*/sensitive/** # 所有模块的敏感数据接口
        # - /api/payment/**     # 支付相关接口
      # 排除加密的接口路径模式列表（优先级高于include-patterns）
      exclude-patterns:
        - /auth/login           # 登录接口通常不加密
        - /auth/logout          # 登出接口
        - /actuator/**          # 健康检查接口
      # 是否加密请求体
      encrypt-request: ${API_ENCRYPTION_REQUEST:true}
      # 是否加密响应体
      encrypt-response: ${API_ENCRYPTION_RESPONSE:true}
      # 加密数据的字段名
      encrypted-field-name: ${API_ENCRYPTION_FIELD_NAME:encryptedData}
      # 是否在响应头中添加加密标识
      add-encryption-header: ${API_ENCRYPTION_HEADER:true}
      # 加密标识响应头名称
      encryption-header-name: ${API_ENCRYPTION_HEADER_NAME:X-Encrypted}
  # 缓存配置
  cache:
    # 是否启用Redis二级缓存
    redis-enabled: ${CACHE_REDIS_ENABLED:true}
    # 字典缓存配置
    dictionary:
      # 是否启用字典缓存
      enabled: ${CACHE_DICTIONARY_ENABLED:true}
      # 缓存过期时间（秒）
      expire-seconds: ${CACHE_DICTIONARY_EXPIRE:3600}
      # 缓存刷新间隔（秒）
      refresh-interval-seconds: ${CACHE_DICTIONARY_REFRESH:1800}
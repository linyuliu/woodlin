# ====================================================================================
# Woodlin Docker 环境变量配置示例
# 
# 使用说明:
# 1. 复制此文件为 .env: cp .env.example .env
# 2. 根据实际环境修改配置项
# 3. 生产环境必须修改所有密码和敏感信息
# 
# 注意事项:
# - 生产环境必须使用强密码 (至少 16 位，包含大小写字母、数字、特殊字符)
# - .env 文件不应提交到版本控制系统
# - 建议使用 Docker Secrets 或环境变量管理工具
# ====================================================================================

# ====================================================================================
# Woodlin 应用配置
# ====================================================================================

# 应用服务端口
SERVER_PORT=8080

# Spring Profile (dev/test/prod)
SPRING_PROFILES_ACTIVE=prod

# 应用资源限制
APP_MAX_CPU=2.0
APP_MAX_MEMORY=2G
APP_MIN_CPU=1.0
APP_MIN_MEMORY=1G

# ====================================================================================
# MySQL 数据库配置
# ====================================================================================

# MySQL 端口
MYSQL_PORT=3306

# MySQL root 密码 (生产环境必须修改为强密码)
# 使用强密码: openssl rand -base64 32
# 示例仅供参考，切勿在生产环境使用
MYSQL_ROOT_PASSWORD=Passw0rd

# 数据库名称
MYSQL_DATABASE=woodlin

# 普通用户配置 (生产环境必须修改为强密码)
MYSQL_USER=woodlin
MYSQL_PASSWORD=Passw0rd

# 数据库连接 URL (应用使用)
DATABASE_URL=jdbc:mysql://mysql:3306/woodlin?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
DATABASE_USERNAME=woodlin
DATABASE_PASSWORD=Passw0rd
DATABASE_DRIVER=com.mysql.cj.jdbc.Driver

# MySQL 资源限制
MYSQL_MAX_CPU=2.0
MYSQL_MAX_MEMORY=2G
MYSQL_MIN_CPU=0.5
MYSQL_MIN_MEMORY=512M

# ====================================================================================
# Redis 缓存配置
# ====================================================================================

# Redis 端口
REDIS_PORT=6379

# Redis 密码 (建议设置，生产环境必须设置强密码)
# 使用强密码: openssl rand -base64 32
REDIS_PASSWORD=

# Redis 数据库索引 (0-15)
REDIS_DATABASE=0

# Redis 连接超时时间
REDIS_TIMEOUT=10s

# Redis 主机 (应用使用)
REDIS_HOST=redis

# Redisson 配置 (应用使用)
REDISSON_ADDRESS=redis://redis:6379
REDISSON_PASSWORD=

# Redis 资源限制
REDIS_MAX_CPU=1.0
REDIS_MAX_MEMORY=1G
REDIS_MIN_CPU=0.25
REDIS_MIN_MEMORY=256M

# ====================================================================================
# MinIO 对象存储配置
# ====================================================================================

# MinIO API 端口 (S3 API)
MINIO_API_PORT=9000

# MinIO Console 端口 (Web 管理界面)
MINIO_CONSOLE_PORT=9001

# MinIO 管理员账号 (生产环境必须修改为强密码)
# 使用强密码: openssl rand -base64 32
# 默认值仅供开发测试使用
MINIO_ROOT_USER=minioadmin
MINIO_ROOT_PASSWORD=minioadmin

# MinIO 区域
MINIO_REGION=cn-north-1

# MinIO Web 控制台开关 (on/off)
MINIO_BROWSER=on

# MinIO 端点 (应用使用)
MINIO_ENDPOINT=http://minio:9000

# MinIO 访问密钥 (应用使用)
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin

# MinIO 默认桶名称
MINIO_BUCKET=woodlin

# MinIO 资源限制
MINIO_MAX_CPU=1.0
MINIO_MAX_MEMORY=1G
MINIO_MIN_CPU=0.25
MINIO_MIN_MEMORY=256M

# ====================================================================================
# PostgreSQL 数据库配置 (可选)
# ====================================================================================

# PostgreSQL 端口
POSTGRESQL_PORT=5432

# PostgreSQL 超级用户密码 (生产环境必须修改为强密码)
# 使用强密码: openssl rand -base64 32
POSTGRES_PASSWORD=Passw0rd

# PostgreSQL 超级用户名称
POSTGRES_USER=postgres

# PostgreSQL 数据库名称
POSTGRES_DB=woodlin

# PostgreSQL 资源限制
POSTGRESQL_MAX_CPU=2.0
POSTGRESQL_MAX_MEMORY=2G
POSTGRESQL_MIN_CPU=0.5
POSTGRESQL_MIN_MEMORY=512M

# ====================================================================================
# 系统限制配置 (ulimit)
# ====================================================================================

# 最大打开文件数
ULIMIT_NOFILE_SOFT=65536
ULIMIT_NOFILE_HARD=65536

# 最大进程/线程数
ULIMIT_NPROC_SOFT=65536
ULIMIT_NPROC_HARD=65536

# ====================================================================================
# 前端服务配置 (可选)
# ====================================================================================

# Nginx 前端服务端口
NGINX_PORT=3000

# Nginx 资源限制
NGINX_MAX_CPU=0.5
NGINX_MAX_MEMORY=256M
NGINX_MIN_CPU=0.1
NGINX_MIN_MEMORY=64M

# ====================================================================================
# 网络配置
# ====================================================================================

# Docker Compose 项目名称 (可选)
COMPOSE_PROJECT_NAME=woodlin

# Docker Compose 配置文件 (可选)
# COMPOSE_FILE=docker-compose.yml

# Docker Compose Profiles (可选)
# COMPOSE_PROFILES=frontend

# ====================================================================================
# 生产环境安全建议
# ====================================================================================

# 1. 生成强密码
#    openssl rand -base64 32

# 2. 使用 Docker Secrets
#    echo "your_password" | docker secret create db_password -

# 3. 限制网络访问
#    修改端口映射为: "127.0.0.1:3306:3306"

# 4. 配置防火墙
#    ufw allow from <trusted_ip> to any port 3306

# 5. 启用 SSL/TLS
#    配置 MySQL SSL, Redis TLS, MinIO HTTPS

# 6. 定期备份
#    设置自动备份脚本

# 7. 监控告警
#    集成 Prometheus, Grafana, ELK Stack

# 8. 日志审计
#    启用访问日志和审计日志

# ====================================================================================
# 宿主机系统优化 (需要 root 权限)
# ====================================================================================

# 编辑 /etc/security/limits.conf:
# * soft nofile 65536
# * hard nofile 65536
# * soft nproc 65536
# * hard nproc 65536

# 编辑 /etc/sysctl.conf:
# fs.file-max = 2097152
# fs.nr_open = 2097152
# net.core.somaxconn = 32768
# net.ipv4.tcp_max_syn_backlog = 8192
# net.ipv4.tcp_tw_reuse = 1
# net.ipv4.tcp_fin_timeout = 30
# net.ipv4.ip_local_port_range = 10000 65535
# vm.swappiness = 10
# vm.max_map_count = 262144

# 应用配置:
# sysctl -p
# systemctl restart docker
